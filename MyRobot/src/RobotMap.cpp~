// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<frc::SpeedController> RobotMap::driveSpeedController1;
std::shared_ptr<frc::SpeedController> RobotMap::driveSpeedController2;
std::shared_ptr<frc::SpeedController> RobotMap::driveSpeedController3;
std::shared_ptr<frc::SpeedController> RobotMap::driveSpeedController4;
std::shared_ptr<frc::RobotDrive> RobotMap::driveRobotDrive4;
std::shared_ptr<frc::SpeedController> RobotMap::grippygrabthingupdownSpeedController1;
std::shared_ptr<frc::SpeedController> RobotMap::grippygrabthingupdownSpeedController2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    frc::LiveWindow *lw = frc::LiveWindow::GetInstance();

    driveSpeedController1.reset(new frc::VictorSP(0));
    lw->AddActuator("Drive", "Speed Controller 1", std::static_pointer_cast<frc::VictorSP>(driveSpeedController1));
    
    driveSpeedController2.reset(new frc::VictorSP(1));
    lw->AddActuator("Drive", "Speed Controller 2", std::static_pointer_cast<frc::VictorSP>(driveSpeedController2));
    
    driveSpeedController3.reset(new frc::VictorSP(15));
    lw->AddActuator("Drive", "Speed Controller 3", std::static_pointer_cast<frc::VictorSP>(driveSpeedController3));
    
    driveSpeedController4.reset(new frc::VictorSP(14));
    lw->AddActuator("Drive", "Speed Controller 4", std::static_pointer_cast<frc::VictorSP>(driveSpeedController4));
    
    driveRobotDrive4.reset(new frc::RobotDrive(driveSpeedController1, driveSpeedController2,
              driveSpeedController3, driveSpeedController4));
    
    driveRobotDrive4->SetSafetyEnabled(false);
        driveRobotDrive4->SetExpiration(0.1);
        driveRobotDrive4->SetSensitivity(0.5);
        driveRobotDrive4->SetMaxOutput(1.0);

    grippygrabthingupdownSpeedController1.reset(new frc::Talon(2));
    lw->AddActuator("Grippygrabthingupdown", "Speed Controller 1", std::static_pointer_cast<frc::Talon>(grippygrabthingupdownSpeedController1));
    
    grippygrabthingupdownSpeedController2.reset(new frc::Talon(3));
    lw->AddActuator("Grippygrabthingupdown", "Speed Controller 2", std::static_pointer_cast<frc::Talon>(grippygrabthingupdownSpeedController2));
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
